type Query {
  me(email: String!): User!
  pokemons(skip: Int!): [Pokemon!]!
  pokemon(id: ID!): PokemonDetail
  pokeType(id: ID!): PokeType
}

type Mutation {
  createUser(data: CreateUserInput!): AuthPayload!
  login(data: LoginInput!): AuthPayload!
}

type User {
  name: String!
  email: String!,
  password: String!
}

input CreateUserInput {
  name: String! 
  email: String!
  password: String!
}

type AuthPayload {
  user: User!
  token: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Pokemon {
  id: ID!
  name: String!
  url: String!
  image: String!
}

type PokemonDetail {
  id: ID!
  name: String!
  url: String!
  image: String!
  pokeType: [PokeType!]!
}

type PokeType {
  id: ID!
  name: String!
  url: String!
  pokemon: [Pokemon!]!
}